/*
 * This file is generated by jOOQ.
 */
package pdv.l3ug1m.github.com.pdvservice.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import pdv.l3ug1m.github.com.pdvservice.jooq.Keys;
import pdv.l3ug1m.github.com.pdvservice.jooq.Public;
import pdv.l3ug1m.github.com.pdvservice.jooq.tables.records.PdvsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pdvs extends TableImpl<PdvsRecord> {

    private static final long serialVersionUID = 1891502864;

    /**
     * The reference instance of <code>public.pdvs</code>
     */
    public static final Pdvs PDVS = new Pdvs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdvsRecord> getRecordType() {
        return PdvsRecord.class;
    }

    /**
     * The column <code>public.pdvs.id_pdvs</code>.
     */
    public final TableField<PdvsRecord, Long> ID_PDVS = createField("id_pdvs", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('pdvs_id_pdvs_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.pdvs.tenant</code>.
     */
    public final TableField<PdvsRecord, String> TENANT = createField("tenant", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.pdvs.nome</code>.
     */
    public final TableField<PdvsRecord, String> NOME = createField("nome", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.pdvs.cidade</code>.
     */
    public final TableField<PdvsRecord, String> CIDADE = createField("cidade", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.pdvs.endereco</code>.
     */
    public final TableField<PdvsRecord, String> ENDERECO = createField("endereco", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.pdvs.cep</code>.
     */
    public final TableField<PdvsRecord, String> CEP = createField("cep", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.pdvs</code> table reference
     */
    public Pdvs() {
        this(DSL.name("pdvs"), null);
    }

    /**
     * Create an aliased <code>public.pdvs</code> table reference
     */
    public Pdvs(String alias) {
        this(DSL.name(alias), PDVS);
    }

    /**
     * Create an aliased <code>public.pdvs</code> table reference
     */
    public Pdvs(Name alias) {
        this(alias, PDVS);
    }

    private Pdvs(Name alias, Table<PdvsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pdvs(Name alias, Table<PdvsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Pdvs(Table<O> child, ForeignKey<O, PdvsRecord> key) {
        super(child, key, PDVS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PdvsRecord, Long> getIdentity() {
        return Keys.IDENTITY_PDVS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pdvs as(String alias) {
        return new Pdvs(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pdvs as(Name alias) {
        return new Pdvs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Pdvs rename(String name) {
        return new Pdvs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Pdvs rename(Name name) {
        return new Pdvs(name, null);
    }
}
